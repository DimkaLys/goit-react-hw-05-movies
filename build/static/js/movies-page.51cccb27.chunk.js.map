{"version":3,"sources":["components/Pages/MoviesPage/MoviesPage.module.css","components/Pages/MoviesSearch/MoviesSearch.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Pages/MoviesSearch/MoviesSearch.js","components/Pages/MoviesPage/MoviesPage.js"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","MoviesSearch","onValueSubmit","useState","valueSearch","setValueSearch","className","styles","header","form","onSubmit","e","preventDefault","trim","toast","error","type","button","buttonLabel","input","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","history","useHistory","location","useLocation","url","useRouteMatch","movies","setMovies","page","setPage","valueQuery","URLSearchParams","search","get","useEffect","fetchSearchMovies","then","data","results","length","warn","prevMovies","catch","err","console","log","push","list","map","id","original_title","name","poster_path","item","to","pathname","state","link","itemDiv","src","alt","width","divButton","onClick","prevPage"],"mappings":"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","file":"static/js/movies-page.51cccb27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesPage_list__2cVLU\",\"item\":\"MoviesPage_item__3zPfW\",\"itemDiv\":\"MoviesPage_itemDiv__6Itno\",\"link\":\"MoviesPage_link__3jM5v\",\"divButton\":\"MoviesPage_divButton__1RsdU\",\"button\":\"MoviesPage_button__18IMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MoviesSearch_header__9TM8p\",\"form\":\"MoviesSearch_form__3kh-T\",\"button\":\"MoviesSearch_button__3jFQw\",\"input\":\"MoviesSearch_input__1m9p3\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styles from './MoviesSearch.module.css';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nconst MoviesSearch = ({ onValueSubmit }) => {\n  const [valueSearch, setValueSearch] = useState('');\n\n  const handleChange = e => {\n    setValueSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (valueSearch.trim() === '') {\n      toast.error('Введите корректное название!');\n    }\n    onValueSubmit(valueSearch);\n    setValueSearch('');\n  };\n\n  return (\n    <header className={styles.header}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={valueSearch}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default MoviesSearch;\n","import styles from './MoviesPage.module.css';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { Link, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport { fetchSearchMovies } from '../../services/movies-api';\nimport MoviesSearch from '../MoviesSearch/MoviesSearch';\n\nconst noPoster =\n  'https://cdn.pixabay.com/photo/2018/01/04/15/51/404-error-3060993_960_720.png';\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const valueQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (!valueQuery) {\n      setMovies([]);\n      return;\n    }\n    fetchSearchMovies(valueQuery, page)\n      .then(data => {\n        if (data.results.length !== 0) {\n          setMovies(prevMovies => [...prevMovies, ...data.results]);\n          return;\n        }\n        toast.warn('Фильмов с таким названием, к сожалению, нет');\n        setMovies([]);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [valueQuery, page]);\n\n  const onSearchValue = value => {\n    setPage(1);\n    setMovies([]);\n    history.push({ ...location, search: `query=${value}` });\n  };\n\n  const handleClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <MoviesSearch onValueSubmit={onSearchValue} />\n\n      {movies && (\n        <>\n          <ul className={styles.list}>\n            {movies.map(({ id, original_title, name, poster_path }) => {\n              return (\n                <li key={id} className={styles.item}>\n                  <Link\n                    to={{\n                      pathname: `${url}/${id}`,\n                      state: { from: location },\n                    }}\n                    className={styles.link}\n                  >\n                    <div className={styles.itemDiv}>\n                      <img\n                        src={\n                          !poster_path ? noPoster : `${baseUrl}${poster_path}`\n                        }\n                        alt={original_title}\n                        width=\"240px\"\n                      />\n                      <p>{original_title ?? name}</p>\n                    </div>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n          {movies.length !== 0 && (\n            <div className={styles.divButton}>\n              <button\n                className={styles.button}\n                type=\"button\"\n                onClick={handleClick}\n              >\n                LoadMore\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}